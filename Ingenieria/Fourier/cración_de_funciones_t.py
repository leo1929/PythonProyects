# -*- coding: utf-8 -*-
"""Cración de Funciones T.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gLfNQKxIAhwBUrnyn86YtlOErq7KH6ek
"""

import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

def generar_funcion_periodica(T, num_terminos):
    # Coeficiente a_0 (término constante)
    a_0 = np.random.uniform(-1, 1)

    # Coeficientes a_n y b_n para n = 1, 2, ..., num_terminos
    a_n = np.random.uniform(-1, 1, num_terminos)
    b_n = np.random.uniform(-1, 1, num_terminos)

    # Dominio de la función periódica
    x = np.linspace(0, T, 1000)

    # Inicializar la función periódica con el término constante a_0
    f_x = a_0 / 2

    # Agregar la contribución de los términos coseno y seno
    for n in range(1, num_terminos + 1):
        f_x += a_n[n - 1] * np.cos(2 * np.pi * n * x / T) + b_n[n - 1] * np.sin(2 * np.pi * n * x / T)

    return x, f_x

# Parámetros para la función periódica
periodo = 10   # Tamaño del período
num_terminos = 10  # Número de términos en la serie de Fourier

# Generar la función periódica
x, f_x = generar_funcion_periodica(periodo, num_terminos)

# Graficar la función periódica
plt.figure(figsize=(10, 5))
plt.plot(x, f_x)
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('Función Periódica Aleatoria')
plt.grid(True)
plt.show()

#Exportación de la grafica en TXT
files.download('funcion_periodica.txt')